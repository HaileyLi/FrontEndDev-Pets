{"version":3,"sources":["Components/Loading.jsx","Components/Display.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loading","Display","props","maleCat","length","sort","map","item","i","femaleCat","App","getData","axios","get","then","res","data","catch","console","log","state","isLoading","this","forEach","gender","pets","pet","ind","type","push","name","setState","Fragment","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAUeA,MANf,WACI,OACI,2CCoBOC,MAzBf,SAAiBC,GACb,OACI,gCACI,uCAC0B,IAAzBA,EAAMC,QAAQC,OACX,oDACA,6BACKF,EAAMC,QAAQE,OAAOC,KAAI,SAACC,EAAMC,GAAP,OACtB,6BAAsBD,GAAb,OAASC,QAG9B,yCAE4B,IAA3BN,EAAMO,UAAUL,OACb,oDACA,6BACKF,EAAMO,UAAUJ,OAAOC,KAAI,SAACC,EAAMC,GAAP,OACxB,6BAAsBD,GAAb,OAASC,YCsD3BE,E,kDAlEb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IA0CRS,QAAU,WACR,OAAOC,IAAMC,IAAI,qDACdC,MAAK,SAACC,GACL,OAAOA,EAAIC,QAEZC,OAAM,WACLC,QAAQC,IAAI,aA/ChB,EAAKC,MAAQ,CACXC,WAAW,GAHI,E,gEAQE,IAAD,OAClBC,KAAKX,UACFG,MAAK,SAAAE,GACJ,IAAIb,EAAU,GACVM,EAAY,GAEhBO,EAAKO,SAAQ,SAAChB,EAAMC,GACE,SAAhBD,EAAKiB,OACW,OAAdjB,EAAKkB,MACPlB,EAAKkB,KAAKF,SAAQ,SAACG,EAAKC,GACL,QAAbD,EAAIE,MACNzB,EAAQ0B,KAAKH,EAAII,SAML,OAAdvB,EAAKkB,MACPlB,EAAKkB,KAAKF,SAAQ,SAACG,EAAKC,GACL,QAAbD,EAAIE,MACNnB,EAAUoB,KAAKH,EAAII,YAO7B,EAAKC,SAAS,CACZ5B,QAASA,EACTM,UAAWA,EACXY,WAAW,S,+BAgBjB,OACE,cAAC,IAAMW,SAAP,UACGV,KAAKF,MAAMC,UACV,cAAC,EAAD,IACA,cAAC,EAAD,CAASlB,QAASmB,KAAKF,MAAMjB,QAASM,UAAWa,KAAKF,MAAMX,kB,GA3DpDwB,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.499affb0.chunk.js","sourcesContent":["\n\nimport React from 'react';\n\nfunction Loading() {\n    return (\n        <div>loading</div>\n    );\n};\n\nexport default Loading;\n","\nfunction Display(props) {\n    return (\n        <div>\n            <h1>Male:</h1>\n            {props.maleCat.length === 0 ?\n                <span>No Cats Recorded</span> :\n                <ul>\n                    {props.maleCat.sort().map((item, i) =>\n                        <li key={\"mkey\" + i}>{item}</li>\n                    )}\n                </ul>}\n            <h1>Female:</h1>\n\n            {props.femaleCat.length === 0 ?\n                <span>No Cats Recorded</span> :\n                <ul>\n                    {props.femaleCat.sort().map((item, i) =>\n                        <li key={\"fkey\" + i}>{item}</li>\n                    )}\n                </ul>}\n\n        </div>\n    );\n};\n\nexport default Display;\n","import React from 'react';\nimport axios from 'axios';\nimport Loading from './Components/Loading.jsx'\nimport Display from './Components/Display.jsx';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n\n    }\n  }\n\n  componentDidMount() {\n    this.getData()\n      .then(data => {\n        let maleCat = []\n        let femaleCat = []\n\n        data.forEach((item, i) => {\n          if (item.gender === \"Male\") {\n            if (item.pets !== null) {\n              item.pets.forEach((pet, ind) => {\n                if (pet.type === \"Cat\") {\n                  maleCat.push(pet.name)\n                }\n              })\n            }\n\n          } else {\n            if (item.pets !== null) {\n              item.pets.forEach((pet, ind) => {\n                if (pet.type === \"Cat\") {\n                  femaleCat.push(pet.name)\n                }\n              })\n            }\n          }\n        }\n        )\n        this.setState({\n          maleCat: maleCat,\n          femaleCat: femaleCat,\n          isLoading: false\n        })\n      })\n  }\n\n  getData = () => {\n    return axios.get(\"http://5c92dbfae7b1a00014078e61.mockapi.io/owners\")\n      .then((res) => {\n        return res.data\n      })\n      .catch(() => {\n        console.log(\"Error\")\n      })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isLoading ?\n          <Loading /> :\n          <Display maleCat={this.state.maleCat} femaleCat={this.state.femaleCat} />\n        }\n      </React.Fragment>\n\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}